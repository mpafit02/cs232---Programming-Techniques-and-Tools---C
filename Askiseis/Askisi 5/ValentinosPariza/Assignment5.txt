<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< CS232 - Assignment 5 - Unix Commands for programmers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

author   : Valentinos Pariza 
username : vpariz01
ID       : 909759

----------------------------------------------------------------------------------- Answer of Question 1 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

ls -l ./"new-"*/as*.h  ./"new-"*/as*.c

ls ./"new-"*/as*.h   ./"new-"*/as*.c


-> Explanation of Command / Commands :

The command ls -l prints all the files of the current directory as a long format list , with some extra information 
about the owner ,about rights , about modification date,etc (ls just shows the names of the files in the current
directory) . Although I specify that i want all the files in the current directory ./ , that exist in subdirectories
of the current directory which start with 'new-' , and the files inside those files should start with 'as' and end with
'.c' or '.h' . The files to end with '.c' or '.h' split the cases to two cases .One  ./"new-"*/as*.h  and one  ./"new-"*/as*.c
The fisrt specifies all the files that start with 'as-' and end with '.h' and the seconds one , all the files that start with 
'as' and end with '.c' and also bot of the cases should be in a directory which name starts with 'new-' and which directory
should be a subdirectory of the current directory.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------- Answer of Question 2 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

grep -r -e '^[[:space:]]*#' .  | wc -l



-> Explanation of Command / Commands :

Use the command grep in order to find all the lines which start with '#' (preprocessor instructions) or start with a space and then continue with 
character '#' and after these count the number of lines that follow this condition

I use grep as i have told with -r (recursively to search inside all the directories down the path ,until the end of the path) . I use -e in order to specify that 
i will use a regular expression. Also as a regular expression i specify that i want the lines that start (symbol '^') with 0,1 or more spaces (' ','\t,'\n',... ,sepecified by [[:space:]] 
 ) and then the lines continue with the character '#' .The search starts from the current directory (specified by '.'). The lines that the command grep will output , is taken as an input
by the command wc -l which counts the number of lines that the grep has found and prints it to the output. This prints the number of lines that contain preprocessor orders(start with 
'#')


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------- Answer of Question 3 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

ls -t1r | grep  '^[a-zA-Z]\{5\}\.c$' | head -n 5 | xargs rm -f




-> Explanation of Command / Commands :

This command uses three commands in pipe.
The ls -t1r prints all the files of the current directory sorted by time (-t) ,at reversed order (-r --> -t1r), which means sorted with first to be the oldest and last the most new
and with 1 name file per line (-1 --> -t1r). The output of this command is taken by command grep which tries to find all the lines that start containing 5 letters (^[a-zA-Z]\{5\}) and 
end with '.c' (\.c$) (These conditions are specified with a regular expression). The output of this command is taken and editted by command head -n 5 ,which takes the first 5 lines 
of the output of the command grep and at the end the command xargs takes all the outputs of the command head (The names of the 5 oldest files which start with 5 letters and end with 
.c) and places them as arguments in the command rm -f (force removing of files) which command deletes all the files with the specified names that follow the previous conditions. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------- Answer of Question 4 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

gcc errors.c  | grep -e ':13[0-9]:' | cut -d ' '  -f1 | cut -d ':' -f2 | sort -n | uniq




-> Explanation of Command / Commands :

This command compiles a .c file with the command .c .After this it takes with the command grep all the lines that contain a sequence/sequences of characters ':'+(Any number between 130-139)+':'
.The -e at grep command specifies that the following String will be a regular expression. The output of the grep command is usedin command cut to take the first column of it, which column is 
specified with delimeter  ' '(space). The output of the previous command is taken and from it , the second column is taken (using now delimeter ':'). The output of it is sorted numerically
in ascending order (sorted -n) and the sorted output is editted in order to have inside all the unique numbers (uniq). More simpler the command prints all the unique lines sorted ascending 
between [130-139] at which errors occured at compilation of the file errors.c. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------- Answer of Question 5 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

who -u | cut -d ' ' -f1 | sort -d -k1 | uniq | grep  '^cs.*a$'


-> Explanation of Command / Commands :

This command is a set of commands in a pipe.
At first the command who -u  gives all the users at the system which are logged in . After this the command cut -d ' ' -f1 , takes the first column of the output , with delimeter the ' '
,which are the names of the users logged in and with command   sort -d , the output is sorted as a dictionary-Alphanumerically (the output is sorted by the first column which are the 
names of the users) . The output of the command sort is taken by command uniq in order to specify the qnique names of users and last the command grep is used to find all the names of the
users which start with 'cs'  and end with a.(^cs.*a$).

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------- Answer of Question 6 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :



find . -name '*.c' -exec iconv -f  ISO-8859-7  -t UTF-8 {} -o {} \;


-> Explanation of Command / Commands :

This method takes all the names of the files from the current directory until the end of the subdirectories(recursively , all the possible paths down) which name end with .c and convert
them from ISO-8859-7 to  UTF-8.The command find , finds all the  names of the files (-name) from the current directry (.) which end with .c (*.c) and at each of the names found it 
executes (-exec) the command iconv. For each file name taken ,the name of the file is used as the source file text ({}) and also as the destination text file (-o {}), that the result
will be saved in.The convertion of the text is made from ISO-8859-7(-f  ISO-8859-7) to UTF-8  (-t UTF-8) for each file name which file name is specified by the output of the first part
of the method find. It is important to say that files that aren't of type ISO-8859-7 won't be converted to UTF-8.


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------- Answer of Question 7 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

find . -maxdepth 1 -mindepth 1  -name '*.c' -exec  grep -E  -e '[ \t]*#[ \t]*include[ \t]*[<\"].*[>\"]' {} \;  | tr -d ' \t' | tr '<\">' ' ' | cut -d ' ' -f2 | sort -d | uniq




-> Explanation of Command / Commands :

This command finds all the names of the files at level 1 depth -> current  directory(current directory level 1 | -maxdepth=1 -mindepth=1 | level 0 is level of the arguments of the command )
which names start with .c (-name '*.c') and for each file name found ,the command find executes the command grep (-exec grep) , using the egrep version of grep(-E) and tries to find(with 
a regular expression) all the lines which start from 0,1 or more spaces(' ' or '\t'), next have a single character '#' one time, next have again 0,1, or more times spaces (' ' or '\t'),
next have the word include ,then 0,1 or more spaces (' ' or '\t'), after this the character '<' or '\"' ([<\"]) followed by any number of characters (.*) and end with '>' or '\"' ([>\"]).
Arguments for the command grep are the file names found from the first part of command find and for each single file name taken, the command grep is executed one time. NExt the output of 
this command is taken by command tr (translate) which command deletes all the characters ' ' and '\t' (tr -d ' \t').After this another command tr replaces all the characters '<','>','\"'
with a simple space (' ') and after this the command cut takes the second column of the output based on the delimeter ' '. Next the output is sorted as a dictionary-alphanumerically ,
in ascending order and is editted by the command uniq which removes any consequent same names(Leaves unique names). After this it will be printed to the console all the names of the 
libraries which are used in incldude functions in all c files which exist at the current directories or somewhere at subdirectories of the current directory. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------- Answer of Question 8 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :

ps -aux | tr '\t' ' ' | tr -s ' ' | cut -d ' ' -f2,8,11- | grep -e '[ ]*[SD]l[ ]*'  | cut -d ' ' -f1,3-






-> Explanation of Command / Commands :

This command firstly prints all the processes of the current pc (which the command is executed on) with many details as indicated by the example.Next the output is not showed in the
console but is piped and is given to the command tr which command replaces all the characters ' ' and '\t' with character ' ' (tr '\t' ' '). After this the output is used by anoter tr
command which squeezes repeats of the characters ' ' to one character. Next the output is used by command cut and from it the second ,the eight and the elevemth column is taken based on 
the delimeter ' ' (cut -d ' ' -f2,8,11). After this the output is used by command grep in order to find all the lines (containing the previous three columns ) that contain0,1 or more 
spaces at the beginning, then the character 'S' or the character 'D', then the character l and then 0,1, or more times space (' '). At the end the output is used by another command cut
which takes the column 1 ,3 and the rest of columns after 3.(-f1,3- The symbol '-' is used to indiacate all the colums after the column 3 (inclusive the column 3)) After this the output
is showed to the console.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------- Answer of Question 9 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :


cat mycommands.txt | sort -d |uniq -c | sort -k1 -r | head -n 1 | tr  -d '[0-9] ' | xargs man | head -n 20


-> Explanation of Command / Commands :

This command open the content of a txt file named mycommands.txt with the command cat. After this the output is sorted with dictionary order (ascending alphanumerically), then is edited
by command uniq which removes any consequent appears of a same line and counts the number of appearances of a line (At this case , removes consequent names of commands) leaving all the
 different lines with their number of occurances next to it, then sorts the first column with dictionary order (alphanumerically) and in reversed order (descending) with command (sort 
-k1 -r).Then it takes , with the command head -n 1 , the first line of the previous output  , then it removes from it all the nambers and the extra spaces with the command tr  -d '[0-9] '
(The numbers were created by the command unique -c which counted al the cnsequent appearances of the same line) , after this the output is used as an argument to the command man with 
the command xargs (xargs man) and last the command head -n 20 , speifies that only the first 20 lines of the output will be displayed.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




----------------------------------------------------------------------------------- Answer of Question 10 -----------------------------------------------------------------------------------

Coomand/Pipe Commands :


ps aux | tee processes.txt | tail -n 8 | sort -d  -k11




-> Explanation of Command / Commands :

This command prints all the processes that are executed on the system with details (ps aux ) in a file with name processes.txt (tee processes.txt) , then it takes the output that 
leaves the command tee processes.txt and takes the last 8 lines ( tail -n 8) , and it sorts them with command sort -d  -k11 , by dictionary order , by the eleventh column. 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------











